{"version":3,"sources":["components/pages/Home.component.js","components/pages/Editor.component.js","components/route/route.const.js","components/elements/FlashMessages/Flashmessages.component.js","components/elements/Loader/Loader.component.js","components/layouts/Default.layout.js","components/route/RouterLayer.js","components/elements/FlashMessages/Flashmessages.reducer.js","components/elements/Loader/Loader.reducer.js","index.js"],"names":["Home","React","Component","Editor","runYourCode","html","document","getElementById","css","js","code","contentWindow","props","dispatch","type","status","Promise","resolve","reject","setState","editorCodeElement","state","innerText","script","then","setTimeout","externalContent","external","map","item","value","open","writeln","close","editorElement","className","data-toggle","this","name","id","autocomplete","onClick","contentEditable","placeholder","concat","index","key","class","href","externalItem","splice","routeCollection","path","component","layout","connect","Flashmessages","message","nextProps","Fragment","success","error","Flashmessagereducer","Loader","console","log","LoaderReducer","DefaultLayoutTemplate","children","DefaultLayout","rest","render","matchProps","RouterLayer","routeDisplayCollection","route","i","exact","action","store","createStore","combineReducers"],"mappings":"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","file":"static/js/main.4333f1e3.chunk.js","sourcesContent":["import React from 'react';\r\nclass Home extends React.Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n            HOme\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nclass Editor extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            editorElement: {\r\n                html: true,\r\n                css: false,\r\n                script: false,\r\n                external: false\r\n            },\r\n            editorCodeElement: {\r\n                html: '',\r\n                css: '',\r\n                script: '',\r\n                external: []\r\n            }\r\n        }\r\n    }\r\n    runYourCode = () => {\r\n        var html = document.getElementById(\"htmlEditor\");\r\n        var css = document.getElementById(\"cssEditor\");\r\n        var js = document.getElementById(\"scriptEditor\");\r\n        var code = document.getElementById(\"run_code_iframe\").contentWindow.document;\r\n        this.props.dispatch({\r\n            type: 'SHOW_HIDE',\r\n            status: true\r\n        })\r\n        new Promise((resolve, reject) => {\r\n            this.setState({\r\n                editorCodeElement: {\r\n                    ...this.state.editorCodeElement,\r\n                    html: html.innerText,\r\n                    css: css.innerText,\r\n                    script: js.innerText\r\n                }\r\n            });\r\n            resolve(true);\r\n        }).then(() => {\r\n            setTimeout(() => {\r\n                this.props.dispatch({\r\n                    type: 'SHOW_HIDE',\r\n                    status: false\r\n                });\r\n\r\n                let externalContent = '';\r\n                this.state.editorCodeElement.external.map((item) => {\r\n                    if (item.type == 'script') {\r\n                        externalContent += `<script src=\"` + item.value + `\"></script>`\r\n                    } else if (item.type == 'css') {\r\n                        externalContent += `<link rel=\"stylesheet\" href=\"` + item.value + `\"/>`\r\n                    }\r\n                });\r\n                code.open();\r\n                code.writeln(\r\n                    this.state.editorCodeElement.html +\r\n                    \" \" +\r\n                    externalContent +\r\n                    ((this.state.editorCodeElement.css) ? \"<style>\" +\r\n                        this.state.editorCodeElement.css +\r\n                        \"</style>\" : \"\") +\r\n                    ((this.state.editorCodeElement.script) ?\r\n                        \"<script>\" +\r\n                        this.state.editorCodeElement.script +\r\n                        \"</script>\" : \"\")\r\n                );\r\n                code.close();\r\n            }, 5000)\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"row editor-container\">\r\n                <div className=\"col-md-6 col-xs-12\">\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-9\">\r\n                            <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n                                <label className={\"btn btn-primary \" + ((this.state.editorElement.html === true) ? \"active\" : \"\")}>\r\n                                    <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" onClick={() => {\r\n                                        this.setState({\r\n                                            editorElement: {\r\n                                                html: true,\r\n                                                css: false,\r\n                                                script: false,\r\n                                                external: false\r\n                                            }\r\n                                        })\r\n                                    }} /> HTML\r\n  </label>\r\n\r\n                                <label className={\"btn btn-primary \" + ((this.state.editorElement.script === true) ? \"active\" : \"\")}>\r\n                                    <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\" onClick={() => {\r\n                                        this.setState({\r\n                                            editorElement: {\r\n                                                html: false,\r\n                                                css: false,\r\n                                                script: true,\r\n                                                external: false\r\n                                            }\r\n                                        })\r\n                                    }} /> Script\r\n  </label>\r\n                                <label className={\"btn btn-primary \" + ((this.state.editorElement.css === true) ? \"active\" : \"\")}>\r\n                                    <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\" onClick={() => {\r\n                                        this.setState({\r\n                                            editorElement: {\r\n                                                html: false,\r\n                                                css: true,\r\n                                                script: false,\r\n                                                external: false\r\n                                            }\r\n                                        })\r\n                                    }} /> CSS\r\n  </label>\r\n                                <label className={\"btn btn-primary \" + ((this.state.editorElement.external === true) ? \"active\" : \"\")}>\r\n                                    <input type=\"radio\" name=\"options\" id=\"option4\" autocomplete=\"off\" onClick={() => {\r\n                                        this.setState({\r\n                                            editorElement: {\r\n                                                html: false,\r\n                                                css: false,\r\n                                                script: false,\r\n                                                external: true\r\n                                            }\r\n                                        })\r\n                                    }} /> External\r\n  </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3 text-right\">\r\n                            <button className=\"btn btn-primary\" onClick={this.runYourCode}>&#x23f5; Run</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editor-code-container\">\r\n                        <div contentEditable id=\"htmlEditor\" className={\"form-control  \" + ((this.state.editorElement.html === false) ? 'hidden' : '')} placeholder=\"Type your HTML\"></div>\r\n                        <div contentEditable id=\"scriptEditor\" className={\"form-control  \" + ((this.state.editorElement.script === false) ? 'hidden' : '')} placeholder=\"Type your Script\"></div>\r\n                        <div contentEditable id=\"cssEditor\" className={\"form-control \" + ((this.state.editorElement.css === false) ? 'hidden' : '')} placeholder=\"Type your CSS\"></div>\r\n                        <div id=\"externalEditor\" className={\"editor-element-container \" + ((this.state.editorElement.external === false) ? 'hidden' : '')}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">\r\n                                    <select className=\"form-control\" id=\"ele_type\">\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"script\">Script</option>\r\n                                        <option value=\"css\">CSS</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col-md-7\">\r\n                                    <input type=\"text\" className=\"form-control\" id=\"ele_value\" placeholder=\"Enter Link\" />\r\n                                </div>\r\n                                <div className=\"col-md-2 text-right\">\r\n                                    <input type=\"button\" value=\"Add\" className=\"btn btn-primary \" onClick={() => {\r\n                                        new Promise((resolve, reject) => {\r\n                                            this.setState({\r\n                                                editorCodeElement: {\r\n                                                    ...this.state.editorCodeElement,\r\n                                                    external: this.state.editorCodeElement.external.concat({\r\n                                                        type: document.getElementById('ele_type').value,\r\n                                                        value: document.getElementById('ele_value').value,\r\n                                                    })\r\n                                                }\r\n                                            });\r\n                                            resolve(true);\r\n                                        }).then(() => {\r\n                                            document.getElementById('ele_type').value = '';\r\n                                            document.getElementById('ele_value').value = '';\r\n                                        })\r\n\r\n\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <table className=\"table\">\r\n                                        {this.state.editorCodeElement.external.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td><span class=\"badge badge-primary\">{item.type}</span></td>\r\n                                                    <td><a href={item.value}>{item.value}</a></td>\r\n                                                    <td><button className=\"btn btn-danger btn-sm\" onClick={() => {\r\n                                                        let externalItem = this.state.editorCodeElement.external;\r\n                                                        externalItem.splice(index, 1);\r\n                                                        this.setState({\r\n                                                            editorCodeElement: {\r\n                                                                ...this.state.editorCodeElement,\r\n                                                                external: externalItem\r\n                                                            }\r\n                                                        });\r\n                                                    }}>x</button></td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 col-xs-12 d-flex align-content-stretch flex-wrap\">\r\n                    <iframe id=\"run_code_iframe\" className=\"iframe-code w-100\"></iframe>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect()(Editor);","import Home from '../pages/Home.component';\r\nimport Editor from '../pages/Editor.component';\r\nconst routeCollection = [\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n        layout: 'DefaultLayout'\r\n    },\r\n    {\r\n        path: '/editor',\r\n        component: Editor,\r\n        layout: 'DefaultLayout'\r\n    },\r\n\r\n];\r\nexport default routeCollection;","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nclass Flashmessages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const {message} = this.props;\r\n        if (nextProps.message !== message) {\r\n            this.setState({ message: nextProps.message });\r\n        }\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        setTimeout(() => {\r\n            this.setState({ message: null });\r\n        }, 5000);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.message && this.state.message.success &&\r\n                    <div className=\"alert alert-success text-center\">\r\n                        {this.state.message.success}\r\n                    </div>\r\n                }\r\n                {this.state.message && this.state.message.error &&\r\n                    <div className=\"alert alert-danger text-center\">\r\n                        {this.state.message.error}\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        message: state.Flashmessagereducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Flashmessages) ;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nclass Loader extends React.Component {\r\n    componentWillReceiveProps(nextProps) {\r\n       console.log(nextProps)\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.status === true &&\r\n                <div className=\"loader-container\">\r\n                    <div>Please wait, untill compiling </div>\r\n                    <span className=\"loader\"></span>\r\n                </div>\r\n                }\r\n                \r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.LoaderReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Loader);\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Flashmessages from '../elements/FlashMessages/Flashmessages.component'\r\nimport Loader from '../elements/Loader/Loader.component'\r\nconst DefaultLayoutTemplate = ({ children }) => (\r\n    <div className=\"container default-container\">\r\n        <Flashmessages />\r\n        <Loader />\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                {/* Header */}\r\n            </div>\r\n        </div>\r\n        {children}\r\n        \r\n     \r\n    </div>\r\n);\r\nconst DefaultLayout = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n\r\n            <DefaultLayoutTemplate>\r\n                <Component {...matchProps} />\r\n            </DefaultLayoutTemplate>\r\n        )} />\r\n    );\r\n}\r\nexport default DefaultLayout;","import React from 'react';\r\nimport {Switch } from 'react-router-dom';\r\nimport routeCollection from './route.const';\r\nimport DefaultLayout from '../layouts/Default.layout';\r\nconst RouterLayer = ()=>{\r\n    let routeDisplayCollection = routeCollection.map((route,i)=>{\r\n      switch(route.layout) {\r\n        case 'DefaultLayout':\r\n        return <DefaultLayout key={i} exact path={route.path} component={route.component}/>\r\n        // case 'AfterLoginLayout':\r\n        // return <AfterLoginLayout key={i} path={route.path} component={route.component}/>\r\n        default: return null;\r\n      }\r\n    });\r\n    return (\r\n      <Switch>\r\n        {routeDisplayCollection}\r\n      </Switch>\r\n    )\r\n  }\r\n\r\nexport default RouterLayer","const Flashmessagereducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SUCCESS\":\r\n            return state = {success:action.message};\r\n        case \"ERROR\":\r\n            return state = {error:action.message};\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\nexport default Flashmessagereducer;","const LoaderReducer = (state=[],action)=>{\r\n    switch(action.type) {\r\n        case \"SHOW_HIDE\":\r\n            return state = action.status;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default LoaderReducer;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css';\r\nimport {BrowserRouter as Router}  from 'react-router-dom'; \r\nimport RouterLayer from './components/route/RouterLayer';\r\nimport {createStore, combineReducers} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport Flashmessagereducer from './components/elements/FlashMessages/Flashmessages.reducer'\r\nimport LoaderReducer from './components/elements/Loader/Loader.reducer'\r\nconst store = createStore( combineReducers (\r\n{\r\n    Flashmessagereducer,\r\n    LoaderReducer\r\n}\r\n));\r\nconst App = ()=>{\r\n    return (\r\n        <React.Fragment>\r\n            <Provider store={store}>\r\n            <Router>\r\n            <RouterLayer/>\r\n            </Router>\r\n            </Provider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nrender (<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}