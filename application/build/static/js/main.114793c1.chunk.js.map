{"version":3,"sources":["components/pages/Home.component.js","components/elements/Loader/Loader.component.js","components/pages/editor/EditorHeader.component.js","components/pages/Editor.component.js","components/route/route.const.js","components/elements/FlashMessages/Flashmessages.component.js","components/layouts/Default.layout.js","components/route/RouterLayer.js","components/elements/FlashMessages/Flashmessages.reducer.js","components/elements/Loader/Loader.reducer.js","index.js"],"names":["Home","handelClickTonav","snippetNumber","Date","getTime","name","Math","random","toString","replace","obj","slug","sessionStorage","setItem","JSON","stringify","props","history","push","className","onClick","this","React","Component","Loader","Fragment","status","connect","state","LoaderReducer","EditorHeader","editMode","snippet","parse","getItem","setState","type","id","defaultValue","newName","document","getElementById","value","Editor","runYourCode","html","css","js","code","contentWindow","dispatch","Promise","resolve","reject","editorCodeElement","innerText","script","then","setTimeout","externalContent","external","map","item","open","writeln","close","err","console","log","editorElement","data-toggle","autoComplete","contentEditable","placeholder","concat","index","key","class","href","externalItem","splice","routeCollection","path","component","layout","Flashmessages","message","nextProps","success","error","Flashmessagereducer","DefaultLayoutTemplate","children","to","src","aria-label","aria-describedby","DefaultLayout","rest","render","matchProps","RouterLayer","routeDisplayCollection","route","i","exact","action","store","createStore","combineReducers"],"mappings":"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","file":"static/js/main.114793c1.chunk.js","sourcesContent":["import React from 'react';\r\nclass Home extends React.Component {\r\n    \r\n    handelClickTonav = ()=>{\r\n        let snippetNumber = new Date().getTime();\r\n        let name = Math.random().toString(24).replace('0.', '') \r\n        let obj = {\r\n            slug: snippetNumber+name,\r\n            name: name\r\n        };\r\n        sessionStorage.setItem('_sc', JSON.stringify(obj));\r\n        this.props.history.push('/editor/'+obj.slug)\r\n        \r\n    }\r\n    render () {\r\n        \r\n        return (\r\n            <div className=\"home-container\">\r\n                <div className=\"banner-container\">\r\n                    <div className=\"heading\">\r\n                    <h2>Code The Future</h2>\r\n                    <div className=\"sub-heading\">Deploy - in just one click</div>\r\n                    </div>\r\n                \r\n                </div>\r\n                <div className=\"bottom-home-container\">\r\n                    <div className=\"btn-container\">\r\n                    <button onClick={this.handelClickTonav} className=\"btn btn-lg btn-primary\">Create Your Own Snippet</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nclass Loader extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.status === true &&\r\n                <div className=\"loader-container\">\r\n                <i className=\"fa fa-circle-o-notch fa-spin\"></i> Please wait, untill compiling\r\n                </div>\r\n                }\r\n                \r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.LoaderReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Loader);\r\n","import React from 'react'\r\nimport Loader from '../../elements/Loader/Loader.component'\r\nclass EditorHeader extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            editMode: false,\r\n            snippet: JSON.parse(sessionStorage.getItem('_sc')),\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n               <div className=\"editor-header\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 col-xs-12\">\r\n                        { this.state.editMode === false &&\r\n                        <div>\r\n                            <span className=\"title\">{this.state.snippet.name}</span>&nbsp;\r\n                            <span className=\"header-icon\" onClick={()=>{\r\n                                this.setState({editMode:true})\r\n                            }}><i className=\"fa fa-pencil\"></i></span>\r\n                        </div>\r\n                        }\r\n                        { this.state.editMode === true &&\r\n                        <div>\r\n                            <input type=\"text\" id=\"snippet_name\" className=\"name-control\" defaultValue={this.state.snippet.name}/>\r\n                            <span className=\"header-icon\" onClick={()=>{\r\n                                let snippet = this.state.snippet;\r\n                                let newName = document.getElementById('snippet_name').value;\r\n                                if (newName) {\r\n                                    snippet.name = newName;\r\n                                    this.setState({'snippet':snippet});\r\n                                    sessionStorage.setItem('_sc', JSON.stringify(snippet) );\r\n                                }\r\n\r\n                                this.setState({editMode:false})\r\n                            }}><i className=\"fa fa-floppy-o\"></i></span>\r\n                        </div>\r\n                        }\r\n                        \r\n                    </div>\r\n                    <div className=\"col-md-6 col-xs-12 text-center\">\r\n                        <Loader />\r\n                    </div>\r\n                    <div className=\"col-md-3 col-xs-12 text-right\">\r\n                    {/* <span className=\"header-icon\"><i className=\"fa fa-floppy-o\"></i></span>&nbsp;\r\n                    <span className=\"header-icon\"><i className=\"fa fa-play\"></i></span> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditorHeader;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditorHeader from './editor/EditorHeader.component';\r\nclass Editor extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            editorElement: {\r\n                html: true,\r\n                css: false,\r\n                script: false,\r\n                external: false\r\n            },\r\n            editorCodeElement: {\r\n                html: '',\r\n                css: '',\r\n                script: '',\r\n                external: []\r\n            }\r\n        }\r\n    }\r\n    runYourCode = () => {\r\n        var html = document.getElementById(\"htmlEditor\");\r\n        var css = document.getElementById(\"cssEditor\");\r\n        var js = document.getElementById(\"scriptEditor\");\r\n        var code = document.getElementById(\"run_code_iframe\").contentWindow.document;\r\n        this.props.dispatch({\r\n            type: 'SHOW_HIDE',\r\n            status: true\r\n        })\r\n        new Promise((resolve, reject) => {\r\n            this.setState({\r\n                editorCodeElement: {\r\n                    ...this.state.editorCodeElement,\r\n                    html: html.innerText,\r\n                    css: css.innerText,\r\n                    script: js.innerText\r\n                }\r\n            });\r\n            resolve(true);\r\n        }).then(() => {\r\n            setTimeout(() => {\r\n                this.props.dispatch({\r\n                    type: 'SHOW_HIDE',\r\n                    status: false\r\n                });\r\n\r\n                let externalContent = '';\r\n                this.state.editorCodeElement.external.map((item) => {\r\n                    if (item.type == 'script') {\r\n                        externalContent += `<script src=\"` + item.value + `\"></script>`\r\n                    } else if (item.type == 'css') {\r\n                        externalContent += `<link rel=\"stylesheet\" href=\"` + item.value + `\"/>`\r\n                    }\r\n                });\r\n                try {\r\n\r\n\r\n                    code.open();\r\n                    code.writeln(\r\n                        this.state.editorCodeElement.html +\r\n                        \" \" +\r\n                        externalContent +\r\n                        ((this.state.editorCodeElement.css) ? \"<style>\" +\r\n                            this.state.editorCodeElement.css +\r\n                            \"</style>\" : \"\") +\r\n                        ((this.state.editorCodeElement.script) ?\r\n                            \"<script>\" +\r\n                            this.state.editorCodeElement.script +\r\n                            \"</script>\" : \"\")\r\n                    );\r\n                    code.close();\r\n                } catch(err) {\r\n                    console.log(err);\r\n                }\r\n            }, 5000)\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"row editor-container\">\r\n                <div className=\"col-md-6 col-xs-12\">\r\n                    <EditorHeader/>\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-9\">\r\n                            <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n                                <label className={\"btn btn-primary \" + ((this.state.editorElement.html === true) ? \"active\" : \"\")}>\r\n                                    <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\" onClick={() => {\r\n                                        this.setState({\r\n                                            editorElement: {\r\n                                                html: true,\r\n                                                css: false,\r\n                                                script: false,\r\n                                                external: false\r\n                                            }\r\n                                        })\r\n                                    }} /> HTML\r\n  </label>\r\n\r\n                                <label className={\"btn btn-primary \" + ((this.state.editorElement.script === true) ? \"active\" : \"\")}>\r\n                                    <input type=\"radio\" name=\"options\" id=\"option2\" autoComplete=\"off\" onClick={() => {\r\n                                        this.setState({\r\n                                            editorElement: {\r\n                                                html: false,\r\n                                                css: false,\r\n                                                script: true,\r\n                                                external: false\r\n                                            }\r\n                                        })\r\n                                    }} /> Script\r\n  </label>\r\n                                <label className={\"btn btn-primary \" + ((this.state.editorElement.css === true) ? \"active\" : \"\")}>\r\n                                    <input type=\"radio\" name=\"options\" id=\"option3\" autoComplete=\"off\" onClick={() => {\r\n                                        this.setState({\r\n                                            editorElement: {\r\n                                                html: false,\r\n                                                css: true,\r\n                                                script: false,\r\n                                                external: false\r\n                                            }\r\n                                        })\r\n                                    }} /> CSS\r\n  </label>\r\n                                <label className={\"btn btn-primary \" + ((this.state.editorElement.external === true) ? \"active\" : \"\")}>\r\n                                    <input type=\"radio\" name=\"options\" id=\"option4\" autoComplete=\"off\" onClick={() => {\r\n                                        this.setState({\r\n                                            editorElement: {\r\n                                                html: false,\r\n                                                css: false,\r\n                                                script: false,\r\n                                                external: true\r\n                                            }\r\n                                        })\r\n                                    }} /> External\r\n  </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3 text-right\">\r\n                            <button className=\"btn btn-primary\" onClick={this.runYourCode}>&#x23f5; Run</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editor-code-container\">\r\n                        <div contentEditable id=\"htmlEditor\" className={\"form-control  \" + ((this.state.editorElement.html === false) ? 'hidden' : '')} placeholder=\"Type your HTML\"></div>\r\n                        <div contentEditable id=\"scriptEditor\" className={\"form-control  \" + ((this.state.editorElement.script === false) ? 'hidden' : '')} placeholder=\"Type your Script\"></div>\r\n                        <div contentEditable id=\"cssEditor\" className={\"form-control \" + ((this.state.editorElement.css === false) ? 'hidden' : '')} placeholder=\"Type your CSS\"></div>\r\n                        <div id=\"externalEditor\" className={\"editor-element-container \" + ((this.state.editorElement.external === false) ? 'hidden' : '')}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">\r\n                                    <select className=\"form-control\" id=\"ele_type\">\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"script\">Script</option>\r\n                                        <option value=\"css\">CSS</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col-md-7\">\r\n                                    <input type=\"text\" className=\"form-control\" id=\"ele_value\" placeholder=\"Enter Link\" />\r\n                                </div>\r\n                                <div className=\"col-md-2 text-right\">\r\n                                    <input type=\"button\" value=\"Add\" className=\"btn btn-primary \" onClick={() => {\r\n                                        let type = document.getElementById('ele_type');\r\n                                        let value = document.getElementById('ele_value');\r\n                                        if (type.value !== '' && value.value !== '') {\r\n                                            new Promise((resolve, reject) => {\r\n                                                this.setState({\r\n                                                    editorCodeElement: {\r\n                                                        ...this.state.editorCodeElement,\r\n                                                        external: this.state.editorCodeElement.external.concat({\r\n                                                            type: type.value,\r\n                                                            value: value.value,\r\n                                                        })\r\n                                                    }\r\n                                                });\r\n                                                resolve(true);\r\n                                            }).then(() => {\r\n                                                type.value = '';\r\n                                                value.value = '';\r\n                                            })\r\n                                        }\r\n\r\n\r\n                                    }} />\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <table className=\"table\">\r\n                                        {this.state.editorCodeElement.external.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td><span class=\"badge badge-primary\">{item.type}</span></td>\r\n                                                    <td><a href={item.value}>{item.value}</a></td>\r\n                                                    <td><button className=\"btn btn-danger btn-sm\" onClick={() => {\r\n                                                        let externalItem = this.state.editorCodeElement.external;\r\n                                                        externalItem.splice(index, 1);\r\n                                                        this.setState({\r\n                                                            editorCodeElement: {\r\n                                                                ...this.state.editorCodeElement,\r\n                                                                external: externalItem\r\n                                                            }\r\n                                                        });\r\n                                                    }}>x</button></td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 col-xs-12 d-flex align-content-stretch flex-wrap\">\r\n                    <iframe id=\"run_code_iframe\" className=\"iframe-code w-100\"></iframe>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect()(Editor);","import Home from '../pages/Home.component';\r\nimport Editor from '../pages/Editor.component';\r\nconst routeCollection = [\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n        layout: 'DefaultLayout'\r\n    },\r\n    {\r\n        path: '/editor/:code',\r\n        component: Editor,\r\n        layout: 'DefaultLayout'\r\n    },\r\n\r\n];\r\nexport default routeCollection;","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nclass Flashmessages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const {message} = this.props;\r\n        if (nextProps.message !== message) {\r\n            this.setState({ message: nextProps.message });\r\n        }\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        setTimeout(() => {\r\n            this.setState({ message: null });\r\n        }, 5000);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.message && this.state.message.success &&\r\n                    <div className=\"alert alert-success text-center\">\r\n                        {this.state.message.success}\r\n                    </div>\r\n                }\r\n                {this.state.message && this.state.message.error &&\r\n                    <div className=\"alert alert-danger text-center\">\r\n                        {this.state.message.error}\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        message: state.Flashmessagereducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Flashmessages) ;","import React from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Flashmessages from '../elements/FlashMessages/Flashmessages.component'\r\n\r\nconst DefaultLayoutTemplate = ({ children }) => (\r\n    <div className=\"main-container default-container\">\r\n        <Flashmessages />\r\n        \r\n        <div className=\"main-header\">\r\n            <div className='row'>\r\n                <div className=\"col-md-3 col-xs-12\">\r\n                    <div className=\"logo-content\">\r\n                       <Link to={'/'}><img src=\"/logo.PNG\" /></Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-5 col-xs-12\"></div>\r\n                <div className=\"col-md-4 col-xs-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-9 col-xs-12\">\r\n                            <div className=\"input-group\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Search\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon2\"><i className=\"fa fa-search\"></i></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-xs-12 text-xs-center\">\r\n                        <a href=\"\" className=\"btn btn-primary\">Sign In</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        {children}\r\n\r\n\r\n    </div>\r\n);\r\nconst DefaultLayout = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n\r\n            <DefaultLayoutTemplate>\r\n                <Component {...matchProps} />\r\n            </DefaultLayoutTemplate>\r\n        )} />\r\n    );\r\n}\r\nexport default DefaultLayout;","import React from 'react';\r\nimport {Switch } from 'react-router-dom';\r\nimport routeCollection from './route.const';\r\nimport DefaultLayout from '../layouts/Default.layout';\r\nconst RouterLayer = ()=>{\r\n    let routeDisplayCollection = routeCollection.map((route,i)=>{\r\n      switch(route.layout) {\r\n        case 'DefaultLayout':\r\n        return <DefaultLayout key={i} exact path={route.path} component={route.component}/>\r\n        // case 'AfterLoginLayout':\r\n        // return <AfterLoginLayout key={i} path={route.path} component={route.component}/>\r\n        default: return null;\r\n      }\r\n    });\r\n    return (\r\n      <Switch>\r\n        {routeDisplayCollection}\r\n      </Switch>\r\n    )\r\n  }\r\n\r\nexport default RouterLayer","const Flashmessagereducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SUCCESS\":\r\n            return state = {success:action.message};\r\n        case \"ERROR\":\r\n            return state = {error:action.message};\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\nexport default Flashmessagereducer;","const LoaderReducer = (state=[],action)=>{\r\n    switch(action.type) {\r\n        case \"SHOW_HIDE\":\r\n            return state = action.status;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default LoaderReducer;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css';\r\nimport {BrowserRouter as Router}  from 'react-router-dom'; \r\nimport RouterLayer from './components/route/RouterLayer';\r\nimport {createStore, combineReducers} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport Flashmessagereducer from './components/elements/FlashMessages/Flashmessages.reducer'\r\nimport LoaderReducer from './components/elements/Loader/Loader.reducer'\r\nconst store = createStore( combineReducers (\r\n{\r\n    Flashmessagereducer,\r\n    LoaderReducer\r\n}\r\n));\r\nconst App = ()=>{\r\n    return (\r\n        <React.Fragment>\r\n            <Provider store={store}>\r\n            <Router>\r\n            <RouterLayer/>\r\n            </Router>\r\n            </Provider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nrender (<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}