{"version":3,"sources":["components/pages/Home.component.js","components/elements/Loader/Loader.component.js","components/elements/editor/EditorHeader.component.js","components/elements/editor/EditorSnippet.component.js","components/elements/editor/EditorViewer.component.js","components/pages/Editor.component.js","components/route/route.const.js","components/elements/FlashMessages/Flashmessages.component.js","components/layouts/layout_elements/Header.component.js","components/layouts/Default.layout.js","components/route/RouterLayer.js","components/elements/FlashMessages/Flashmessages.reducer.js","components/elements/Loader/Loader.reducer.js","components/elements/editor/Editor.reducer.js","dependency/Auth.reducer.js","index.js"],"names":["Home","handelClickTonav","snippetNumber","Date","getTime","name","Math","random","toString","replace","obj","slug","sessionStorage","setItem","JSON","stringify","props","history","push","className","onClick","this","React","Component","Loader","Fragment","status","connect","state","LoaderReducer","EditorHeader","editMode","snippet","parse","getItem","playStatus","authStatus","nextProps","setState","runInit","action","type","id","defaultValue","newName","document","getElementById","value","snippetData","codeData","data","dispatch","EditorReducer","AuthReducer","EditorSnippet","editorInstance","html","css","script","external","editorElement","editorCodeElement","console","log","Promise","resolve","reject","then","Tabs","defaultActiveKey","onSelect","key","querySelector","setTimeout","CodeMirror","refresh","Tab","eventKey","title","placeholder","options","lineNumbers","styleActiveLine","matchBrackets","theme","onChange","editor","test","concat","message","map","item","index","target","href","externalItem","splice","EditorViewer","code","contentWindow","externalContent","codeElement","open","writeln","close","err","Editor","routeCollection","path","component","layout","Flashmessages","success","error","Flashmessagereducer","Header","showModal","modalShow","hideModal","to","src","aria-label","aria-describedby","aria-hidden","DefaultLayoutTemplate","children","DefaultLayout","rest","render","matchProps","RouterLayer","routeDisplayCollection","route","i","exact","store","createStore","combineReducers"],"mappings":"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","file":"static/js/main.27a965ec.chunk.js","sourcesContent":["import React from 'react';\r\nclass Home extends React.Component {\r\n    \r\n    handelClickTonav = ()=>{\r\n        let snippetNumber = new Date().getTime();\r\n        let name = Math.random().toString(24).replace('0.', '') \r\n        let obj = {\r\n            slug: snippetNumber+name,\r\n            name: name\r\n        };\r\n        sessionStorage.setItem('_sc', JSON.stringify(obj));\r\n        this.props.history.push('/editor/'+obj.slug)\r\n        \r\n    }\r\n    render () {\r\n        \r\n        return (\r\n            <div className=\"home-container\">\r\n                <div className=\"banner-container\">\r\n                    <div className=\"heading\">\r\n                    <h2>Code The Future</h2>\r\n                    <div className=\"sub-heading\">Deploy - in just one click</div>\r\n                    </div>\r\n                \r\n                </div>\r\n                <div className=\"bottom-home-container\">\r\n                    <div className=\"btn-container\">\r\n                    <button onClick={this.handelClickTonav} className=\"btn btn-lg btn-primary\">Create Your Own Snippet</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nclass Loader extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.status === true &&\r\n                <div className=\"loader-container\">\r\n                <i className=\"fa fa-circle-o-notch fa-spin\"></i> Please wait, untill compiling\r\n                </div>\r\n                }\r\n                \r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.LoaderReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Loader);\r\n","import React from 'react'\r\nimport Loader from '../Loader/Loader.component';\r\nimport {connect} from 'react-redux';\r\nclass EditorHeader extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            editMode: false,\r\n            snippet: JSON.parse(sessionStorage.getItem('_sc')),\r\n            playStatus: false,\r\n            authStatus: false,\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({'authStatus':(nextProps.authStatus.status=== true)?false:true});\r\n        \r\n        if (nextProps.runInit.action === 'complete') {\r\n            this.setState({\r\n                playStatus: false\r\n            });\r\n        } else if (nextProps.runInit.action === 'generate') {\r\n            this.setState({\r\n                playStatus: true\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n               <div className=\"editor-header\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 col-xs-12\">\r\n                        { this.state.editMode === false &&\r\n                        <div>\r\n                            <span className=\"title\">{this.state.snippet.name}</span>&nbsp;\r\n                            <span className=\"header-icon\" onClick={()=>{\r\n                                this.setState({editMode:true})\r\n                            }}><i className=\"fa fa-pencil\"></i></span>\r\n                        </div>\r\n                        }\r\n                        { this.state.editMode === true &&\r\n                        <div>\r\n                            <input type=\"text\" id=\"snippet_name\" className=\"name-control\" defaultValue={this.state.snippet.name}/>\r\n                            <span className=\"header-icon\" onClick={()=>{\r\n                                let snippet = this.state.snippet;\r\n                                let newName = document.getElementById('snippet_name').value;\r\n                                if (newName) {\r\n                                    snippet.name = newName;\r\n                                    this.setState({'snippet':snippet});\r\n                                    sessionStorage.setItem('_sc', JSON.stringify(snippet) );\r\n                                }\r\n\r\n                                this.setState({editMode:false})\r\n                            }}><i className=\"fa fa-floppy-o\"></i></span>\r\n                        </div>\r\n                        }\r\n                        \r\n                    </div>\r\n                    <div className=\"col-md-6 col-xs-12 text-center\">\r\n                        <Loader />\r\n                    </div>\r\n                    <div className=\"col-md-3 col-xs-12 text-right\">\r\n                    <span className=\"header-icon\" onClick={()=>{\r\n                        // this.props.dispatch({\r\n                        //     type: 'GUEST_USER'\r\n                        // });\r\n                        let snippetData = {\r\n                            ...this.state.snippet,\r\n                            ...this.props.codeData.data\r\n                        } ;\r\n                        sessionStorage.setItem('_sc', JSON.stringify(snippetData));\r\n\r\n                        if (this.state.authStatus === true ) {\r\n                            \r\n                        } \r\n                    }}><i className=\"fa fa-floppy-o\"></i></span>&nbsp;\r\n                    <span className=\"header-icon\" onClick={()=>{\r\n                        this.props.dispatch({\r\n                            type: 'SHOW_HIDE',\r\n                            status: true\r\n                        });\r\n                        this.props.dispatch({\r\n                            type:\"RUN_INIT\",\r\n                            status:true\r\n                        })\r\n                    }}><i className={'fa '+((this.state.playStatus === false)? 'fa-play': 'fa-pause')}></i></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        runInit: state.EditorReducer,\r\n        authStatus: state.AuthReducer,\r\n        codeData: state.EditorReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(EditorHeader);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nclass EditorSnippet extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.editorInstance = {\r\n            html: null,\r\n            css: null,\r\n            script: null,\r\n            external: []\r\n        }\r\n        this.state = {\r\n            editorElement: {\r\n                html: true,\r\n                css: false,\r\n                script: false,\r\n                external: false\r\n            },\r\n\r\n            editorCodeElement: {\r\n                type: 'snippet',\r\n                html: '',\r\n                css: '',\r\n                script: '',\r\n                external: []\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem('_sc')) {\r\n            let snippetData = JSON.parse(sessionStorage.getItem('_sc'));\r\n            // this.editorInstance.html = snippetData.html;\r\n            console.log(snippetData);\r\n            this.setState({\r\n                editorCodeElement: {\r\n                    ...this.state.editorCodeElement,\r\n                    html: snippetData.html,\r\n                    css: snippetData.css,\r\n                    script: snippetData.script,\r\n                    external: snippetData.external\r\n                }\r\n            });\r\n            this.editorInstance.external = snippetData.external;\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.runInit.action === 'init') {\r\n            var snippetData = {};\r\n            var html = document.getElementById(\"htmlEditor\");\r\n            var css = document.getElementById(\"cssEditor\");\r\n            var js = document.getElementById(\"scriptEditor\");\r\n            new Promise((resolve, reject) => {\r\n                \r\n                snippetData = {\r\n                    ...this.state.editorCodeElement,\r\n                    html: this.editorInstance.html,\r\n                    css: this.editorInstance.css,\r\n                    script: this.editorInstance.script,\r\n                    external: this.editorInstance.external\r\n                };\r\n                resolve(true);\r\n            }).then(() => {\r\n                this.props.dispatch({\r\n                    type: 'GENERATE_SNIPPET',\r\n                    snippetData: snippetData\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editor-snippet-container\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-9\">\r\n                       \r\n                    </div>\r\n                    <div className=\"col-md-3 text-right\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"editor-code-container\">\r\n                    <Tabs defaultActiveKey=\"html\" id=\"uncontrolled-tab-example\" onSelect={(key)=>{\r\n                        if (document.querySelector('#uncontrolled-tab-example-pane-'+key+' .CodeMirror')) {\r\n                            setTimeout(()=>{\r\n                                document.querySelector('#uncontrolled-tab-example-pane-'+key+' .CodeMirror').CodeMirror.refresh();\r\n                            },400); \r\n                        }\r\n                    }}>\r\n                        <Tab eventKey=\"html\" title=\"HTML\">\r\n                        <CodeMirror\r\n                        value={this.state.editorCodeElement.html}\r\n                        className={\"  \"} placeholder=\"Type your HTML\" options={{\r\n                            lineNumbers: true,\r\n                            styleActiveLine: true,\r\n                            matchBrackets: true,\r\n                            theme:'ayu-dark'\r\n                        }} onChange={(editor, data, value) => { this.editorInstance.html = value }} />\r\n                        </Tab>\r\n                        <Tab eventKey=\"script\" title=\"Script\">\r\n\r\n                        <CodeMirror\r\n                        value={this.state.editorCodeElement.script}\r\n                        className={\"  \"} placeholder=\"Type your Script\" options={{\r\n                            lineNumbers: true,\r\n                            styleActiveLine: true,\r\n                            matchBrackets: true,\r\n                            theme:'ayu-dark'\r\n                        }} onChange={(editor, data, value) => { this.editorInstance.script = value }} />\r\n                        </Tab>\r\n                        <Tab eventKey=\"css\" title=\"CSS\">\r\n\r\n                        <CodeMirror\r\n                        value={this.state.editorCodeElement.css}\r\n                        className={\" \"} placeholder=\"Type your CSS\" options={{\r\n                            lineNumbers: true,\r\n                            styleActiveLine: true,\r\n                            matchBrackets: true,\r\n                            theme:'ayu-dark'\r\n                        }} onChange={(editor, data, value) => { this.editorInstance.css = value }} />\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"external\" title=\"External\">\r\n\r\n                        <div id=\"externalEditor\" className={\"editor-element-container \"}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <select className=\"form-control\" id=\"ele_type\">\r\n                                    <option value=\"\">js / css</option>\r\n                                    <option value=\"script\">Script</option>\r\n                                    <option value=\"css\">CSS</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-7\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"ele_value\" placeholder=\"Enter Link\" />\r\n                            </div>\r\n                            <div className=\"col-md-2 text-right\">\r\n                                <button className=\"btn btn-primary \" onClick={() => {\r\n                                    let type = document.getElementById('ele_type');\r\n                                    let value = document.getElementById('ele_value');\r\n                                    if (type.value !== '' && value.value !== '') {\r\n                                        let regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\r\n                                        if (regexp.test(value.value)) {\r\n                                            new Promise((resolve, reject) => {\r\n                                                let external = this.state.editorCodeElement.external||[];\r\n                                                external = external.concat({\r\n                                                    type: type.value,\r\n                                                    value: value.value,\r\n                                                });\r\n                                                this.setState({\r\n                                                    editorCodeElement: {\r\n                                                        ...this.state.editorCodeElement,\r\n                                                        external: external\r\n                                                    }\r\n                                                });\r\n                                                this.editorInstance.external = external;\r\n                                                resolve(true);\r\n                                            }).then(() => {\r\n                                                type.value = '';\r\n                                                value.value = '';\r\n                                            })\r\n                                        } else {\r\n                                            this.props.dispatch({\r\n                                                type: 'ERROR',\r\n                                                message: 'Link is not valid'\r\n                                            })\r\n                                        }\r\n\r\n                                    } else {\r\n\r\n                                        this.props.dispatch({\r\n                                            type: 'ERROR',\r\n                                            message: 'Please add type and link '\r\n                                        })\r\n                                    }\r\n\r\n\r\n                                }} ><i className=\"fa fa-plus-circle\"></i></button>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        { this.state.editorCodeElement.external && \r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n                                        {this.state.editorCodeElement.external.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td><span className={\"badge \" + ((item.type === 'css') ? 'badge-danger' : 'badge-success')}>{item.type}</span></td>\r\n                                                    <td><a target=\"_blank\" href={item.value}>{item.value}</a></td>\r\n                                                    <td><button className=\"btn btn-danger btn-sm\" onClick={() => {\r\n                                                        let externalItem = this.state.editorCodeElement.external;\r\n                                                        externalItem.splice(index, 1);\r\n                                                        this.setState({\r\n                                                            editorCodeElement: {\r\n                                                                ...this.state.editorCodeElement,\r\n                                                                external: externalItem\r\n                                                            }\r\n                                                        });\r\n                                                    }}><i className=\"fa fa-times-circle\"></i></button></td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                \r\n                \r\n                        </Tab>\r\n                    </Tabs>\r\n                    \r\n                    \r\n                   \r\n                \r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        runInit: state.EditorReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(EditorSnippet);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nclass EditorViewer extends React.Component {\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.codeData.action === 'generate') {\r\n            setTimeout(() => {\r\n                var code = document.getElementById(\"run_code_iframe\").contentWindow.document;\r\n                this.props.dispatch({\r\n                    type: 'SHOW_HIDE',\r\n                    status: false\r\n                });\r\n\r\n                let externalContent = '';\r\n                let codeElement = this.props.codeData.data;\r\n                if (codeElement.type === 'snippet') {\r\n                    if (codeElement.external) {\r\n                        codeElement.external.map((item) => {\r\n                            if (item.type == 'script') {\r\n                                externalContent += `<script src=\"` + item.value + `\"></script>`\r\n                            } else if (item.type == 'css') {\r\n                                externalContent += `<link rel=\"stylesheet\" href=\"` + item.value + `\"/>`\r\n                            }\r\n                        });\r\n                    }\r\n                    try {\r\n\r\n\r\n                        code.open();\r\n                        code.writeln(\r\n                            codeElement.html +\r\n                            \" \" +\r\n                            externalContent +\r\n                            ((codeElement.css) ? \"<style>\" +\r\n                            codeElement.css +\r\n                                \"</style>\" : \"\") +\r\n                            ((codeElement.script) ?\r\n                                \"<script>\" +\r\n                                codeElement.script +\r\n                                \"</script>\" : \"\")\r\n                        );\r\n                        code.close();\r\n                        this.props.dispatch({\r\n                            type:'RUN_COMPLETE',\r\n                            data:codeElement\r\n                        })\r\n                    } catch (err) {\r\n                        console.log(err);\r\n                    }\r\n                }\r\n\r\n            }, 2000)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editr-viewr-container\">\r\n                <iframe id=\"run_code_iframe\" className=\"iframe-code\"></iframe>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        codeData: state.EditorReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(EditorViewer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditorHeader from '../elements/editor/EditorHeader.component';\r\nimport EditorSnippet from '../elements/editor/EditorSnippet.component';\r\nimport EditorViewer from '../elements/editor/EditorViewer.component';\r\n// import '../../assets/3024-night.css'\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/theme/3024-night.css';\r\nimport 'codemirror/theme/ayu-dark.css';\r\nclass Editor extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"row editor-container\">\r\n                <div className=\"col-md-6 col-xs-12 column-one\">\r\n                    <EditorHeader />\r\n                    <br />\r\n                    <EditorSnippet/>\r\n                </div>\r\n                <div className=\"col-md-6 col-xs-12\">\r\n                    <EditorViewer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect()(Editor);","import Home from '../pages/Home.component';\r\nimport Editor from '../pages/Editor.component';\r\nconst routeCollection = [\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n        layout: 'DefaultLayout'\r\n    },\r\n    {\r\n        path: '/editor/:code',\r\n        component: Editor,\r\n        layout: 'DefaultLayout'\r\n    },\r\n\r\n];\r\nexport default routeCollection;","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nclass Flashmessages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const {message} = this.props;\r\n        if (nextProps.message !== message) {\r\n            this.setState({ message: nextProps.message });\r\n        }\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        setTimeout(() => {\r\n            this.setState({ message: null });\r\n        }, 5000);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"alert-container\">\r\n                {this.state.message && this.state.message.success &&\r\n                    <div className=\"alert alert-success text-center\">\r\n                        {this.state.message.success}\r\n                    </div>\r\n                }\r\n                {this.state.message && this.state.message.error &&\r\n                    <div className=\"alert alert-danger text-center\">\r\n                        {this.state.message.error}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        message: state.Flashmessagereducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Flashmessages) ;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal, Tabs, Tab } from \"react-bootstrap\";\r\nimport {connect} from 'react-redux';\r\nclass Header extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            modalShow: false\r\n        }\r\n    }\r\n    showModal = () => {\r\n        this.setState({\r\n            modalShow: true\r\n        })\r\n    };\r\n\r\n    hideModal = () => {\r\n        this.setState({\r\n            modalShow: false\r\n        })\r\n    };\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({modalShow:nextProps.status});\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-header\">\r\n                <div className='row'>\r\n                    <div className=\"col-md-3 col-xs-12\">\r\n                        <div className=\"logo-content\">\r\n                            <Link to={'/'}><img src=\"logo.PNG\" /></Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-5 col-xs-12\"></div>\r\n                    <div className=\"col-md-4 col-xs-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-9 col-xs-12\">\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Search\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text\" id=\"basic-addon2\"><i className=\"fa fa-search\"></i></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3 col-xs-12 text-xs-center\">\r\n                                <button className=\"btn btn-primary\" onClick={this.showModal}>Sign In</button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={\"customModal \" + ((this.state.modalShow) ? 'show' : 'hide')}>\r\n                    <div className=\"modalDialog\">\r\n                        <div className=\"modalHead\">\r\n                            <span className=\"closeSpan\" onClick={this.hideModal}>x</span>\r\n                        </div>\r\n                        <div className=\"modalBody\">\r\n                            <div className=\"row sign-in-container\">\r\n                                <div className=\"col-md-6 col-xs-12 first-coloum\">\r\n                                    <Tabs defaultActiveKey=\"sign_in\" id=\"uncontrolled-tab-example\">\r\n                                        <Tab eventKey=\"sign_in\" title=\"Sign In\">\r\n                                            <form name=\"sign_in_form\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"password\" name=\"email\" className=\"form-control\" placeholder=\"Password\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"submit\" name=\"submit\" className=\"btn btn-primary\" value=\"Login\"/>&nbsp;\r\n                                                    <a>Forget Password?</a>\r\n                                                </div>\r\n                                            </form>\r\n                                        </Tab>\r\n                                        <Tab eventKey=\"sign_up\" title=\"Sign Up\">\r\n\r\n                                            <form name=\"sign_up_form\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Name\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"password\" name=\"email\" className=\"form-control\" placeholder=\"Password\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"submit\" name=\"submit\" className=\"btn btn-primary\" value=\"Sign Up\"/>\r\n                                                </div>\r\n                                            </form>\r\n                                        </Tab>\r\n                                    </Tabs>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-xs-12\">\r\n                                    <div className=\"right-btn-container\">\r\n                                    <button className=\"btn btn-primary btn-block\"><i className=\"fa fa-github\" aria-hidden=\"true\"></i> Signin with Github</button>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        status : state.AuthReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Flashmessages from '../elements/FlashMessages/Flashmessages.component'\r\nimport Header from './layout_elements/Header.component';\r\nconst DefaultLayoutTemplate = ({ children }) => (\r\n    <div className=\"main-container default-container\">\r\n        <Flashmessages />\r\n        <Header/>\r\n        {children}\r\n    </div>\r\n);\r\nconst DefaultLayout = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n\r\n            <DefaultLayoutTemplate>\r\n                <Component {...matchProps} />\r\n            </DefaultLayoutTemplate>\r\n        )} />\r\n    );\r\n}\r\nexport default DefaultLayout;","import React from 'react';\r\nimport {Switch } from 'react-router-dom';\r\nimport routeCollection from './route.const';\r\nimport DefaultLayout from '../layouts/Default.layout';\r\nconst RouterLayer = ()=>{\r\n    let routeDisplayCollection = routeCollection.map((route,i)=>{\r\n      switch(route.layout) {\r\n        case 'DefaultLayout':\r\n        return <DefaultLayout key={i} exact path={route.path} component={route.component}/>\r\n        // case 'AfterLoginLayout':\r\n        // return <AfterLoginLayout key={i} path={route.path} component={route.component}/>\r\n        default: return null;\r\n      }\r\n    });\r\n    return (\r\n      <Switch>\r\n        {routeDisplayCollection}\r\n      </Switch>\r\n    )\r\n  }\r\n\r\nexport default RouterLayer","const Flashmessagereducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SUCCESS\":\r\n            return state = {success:action.message};\r\n        case \"ERROR\":\r\n            return state = {error:action.message};\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\nexport default Flashmessagereducer;","const LoaderReducer = (state=[],action)=>{\r\n    switch(action.type) {\r\n        case \"SHOW_HIDE\":\r\n            return state = action.status;\r\n        default: return state;\r\n    }\r\n    \r\n};\r\n\r\nexport default LoaderReducer;","const EditorReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"RUN_INIT\":\r\n            return state = {\r\n                action: 'init',\r\n                data: action.status\r\n            };\r\n        case \"GENERATE_SNIPPET\":\r\n            return state = state = {\r\n                action: 'generate',\r\n                data: action.snippetData\r\n            }\r\n        case \"RUN_COMPLETE\":\r\n            return state = state = {\r\n                action: 'complete',\r\n                data: action.data\r\n            }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default EditorReducer","const AuthReducer = (state=[], action)=>{\r\n    // console.log(action);\r\n    switch (action.type) {\r\n        case \"GUEST_USER\":\r\n            return state = {status: (sessionStorage.getItem('_u'))?false:true};\r\n        default : return state;\r\n    }\r\n};\r\nexport default AuthReducer;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css';\r\nimport {HashRouter}  from 'react-router-dom'; \r\nimport RouterLayer from './components/route/RouterLayer';\r\nimport {createStore, combineReducers} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport Flashmessagereducer from './components/elements/FlashMessages/Flashmessages.reducer'\r\nimport LoaderReducer from './components/elements/Loader/Loader.reducer';\r\nimport EditorReducer from './components/elements/editor/Editor.reducer';\r\nimport AuthReducer from './dependency/Auth.reducer';\r\nconst store = createStore( combineReducers (\r\n{\r\n    Flashmessagereducer,\r\n    LoaderReducer,\r\n    EditorReducer,\r\n    AuthReducer\r\n}\r\n));\r\nconst App = ()=>{\r\n    return (\r\n        <React.Fragment>\r\n            <Provider store={store}>\r\n            <HashRouter>\r\n            <RouterLayer/>\r\n            </HashRouter>\r\n            </Provider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nrender (<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}